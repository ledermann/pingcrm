name: Continuous integration
on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres

    env:
      DB_HOST: localhost
      DB_USER: postgres
      DB_PASSWORD: postgres
      RAILS_ENV: test

    steps:
      - uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Lint with RuboCop
        run: bundle exec rubocop --parallel

      - name: Setup Node.js
        uses: actions/setup-node@v3.8.1
        with:
          cache: yarn

      - name: Install Yarn packages
        run: yarn install --frozen-lockfile

      - name: Lint with ESLint
        run: yarn lint

      - name: Compile assets
        run: bin/rails assets:precompile

      - name: Run Tests
        run: |
          bundle exec rake db:prepare
          bundle exec rake test
          bundle exec rake test:system

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: test

    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Package Registry
        run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p ${{ secrets.PACKAGES_TOKEN }}

      - name: Build the production image
        run: |
          export COMMIT_TIME=$(git show -s --format=%ci ${GITHUB_SHA})
          export COMMIT_SHA=${GITHUB_SHA}
          docker buildx build --build-arg COMMIT_TIME --build-arg COMMIT_SHA -t "docker.pkg.github.com/ledermann/pingcrm/pingcrm:latest" .

      - name: Push the production image
        run: docker push "docker.pkg.github.com/ledermann/pingcrm/pingcrm:latest"

      - name: Send notification
        run: curl -X POST ${{ secrets.DEPLOY_HOOK }}
