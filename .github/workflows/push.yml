name: Continuous integration
on: push

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14-alpine
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: postgres

    env:
      DB_HOST: localhost
      DB_USER: postgres
      DB_PASSWORD: postgres
      RAILS_ENV: test

    steps:
      - uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Lint with RuboCop
        run: bundle exec rubocop --parallel

      - name: Get Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn packages
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Yarn packages
        run: yarn install --frozen-lockfile

      - name: Lint with ESLint
        run: yarn lint

      - name: Compile assets
        run: bin/rails assets:precompile webpacker:disable_compile_in_test

      - name: Run Tests
        run: |
          bundle exec rake db:prepare
          bundle exec rake test
          bundle exec rake test:system

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: test

    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Package Registry
        run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p ${{ secrets.PACKAGES_TOKEN }}

      - name: Build the production image
        run: |
          export COMMIT_TIME=$(git show -s --format=%ci ${GITHUB_SHA})
          export COMMIT_SHA=${GITHUB_SHA}
          docker buildx build --build-arg COMMIT_TIME --build-arg COMMIT_SHA -t "docker.pkg.github.com/ledermann/pingcrm/pingcrm:latest" .

      - name: Push the production image
        run: docker push "docker.pkg.github.com/ledermann/pingcrm/pingcrm:latest"

      - name: Send notification
        run: curl -X POST ${{ secrets.DEPLOY_HOOK }}
